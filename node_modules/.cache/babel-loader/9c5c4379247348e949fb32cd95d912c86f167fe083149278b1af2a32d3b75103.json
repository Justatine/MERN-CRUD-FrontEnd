{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport const AuthRoutes = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const token = localStorage.getItem('accessToken');\n  if (token === null || !token) {\n    setIsAuthenticated(false);\n  } else {\n    setIsAuthenticated(true);\n  }\n  return {\n    isAuthenticated\n  };\n  // return (props) => {\n  //   const token = localStorage.getItem('accessToken');\n\n  //   if (!token) {\n  //     return <Navigate to=\"/signin\" />;\n  //   }\n\n  //   return <WrappedComponent {...props} />;\n  // };\n};\n_s(AuthRoutes, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = AuthRoutes;\nvar _c;\n$RefreshReg$(_c, \"AuthRoutes\");","map":{"version":3,"names":["useState","AuthRoutes","_s","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","_c","$RefreshReg$"],"sources":["C:/Users/Jan Kenneth/Desktop/projects/templates/MERN/student_frontend/src/assets/routes/AuthRoutes.jsx"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport const AuthRoutes = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const token = localStorage.getItem('accessToken');\r\n  if (token === null || !token) {\r\n    setIsAuthenticated(false)\r\n  }else{\r\n    setIsAuthenticated(true)\r\n  }\r\n  \r\n  return {\r\n    isAuthenticated\r\n  }\r\n  // return (props) => {\r\n  //   const token = localStorage.getItem('accessToken');\r\n\r\n  //   if (!token) {\r\n  //     return <Navigate to=\"/signin\" />;\r\n  //   }\r\n\r\n  //   return <WrappedComponent {...props} />;\r\n  // };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMK,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD,IAAIF,KAAK,KAAK,IAAI,IAAI,CAACA,KAAK,EAAE;IAC5BD,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC,MAAI;IACHA,kBAAkB,CAAC,IAAI,CAAC;EAC1B;EAEA,OAAO;IACLD;EACF,CAAC;EACD;EACA;;EAEA;EACA;EACA;;EAEA;EACA;AACF,CAAC;AAACD,EAAA,CArBWD,UAAU;AAAAO,EAAA,GAAVP,UAAU;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}