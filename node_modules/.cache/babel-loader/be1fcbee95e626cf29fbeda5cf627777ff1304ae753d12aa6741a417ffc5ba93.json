{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"../helpers/axios\";\nconst API_URL = process.env.REACT_APP_API_URL;\nexport const loginUser = async data => {\n  try {\n    const res = await fetch(`${API_URL}/api/auth/login`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include',\n      body: JSON.stringify(data)\n    });\n    if (!res.ok) {\n      throw new Error('Failed to fetch user profile');\n    }\n    const result = await res.json();\n    localStorage.setItem('accessToken', result.accessToken);\n    return {\n      message: result.message,\n      status: result.status,\n      accessToken: result.accessToken,\n      userRole: result.userRole\n    };\n  } catch (error) {\n    console.log('Error signing in: ', error);\n    throw error;\n  }\n};\nexport const fetchWithAuth = async (url, options = {}) => {\n  _s();\n  const navigate = useNavigate();\n  try {\n    let accessToken = localStorage.getItem('accessToken');\n    if (!accessToken) throw new Error('No access token found');\n    options.headers = {\n      ...options.headers,\n      'Authorization': `Bearer ${accessToken}`\n    };\n    let res = await fetch(url, options);\n    if (res.status === 403) {\n      console.log('Access token expired, attempting to refresh...');\n      accessToken = await refreshToken();\n      if (accessToken) {\n        options.headers['Authorization'] = `Bearer ${accessToken}`;\n        res = await fetch(url, options);\n      } else {\n        throw new Error('Failed to refresh token');\n      }\n    }\n    if (!res.ok) {\n      const errorMessage = await res.text();\n      throw new Error(`Request failed with status ${res.status}: ${errorMessage}`);\n    }\n    return await res.json();\n  } catch (error) {\n    navigate('/');\n    console.error('Error fetching with auth:', error);\n    throw error;\n  }\n};\n_s(fetchWithAuth, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\nconst refreshToken = async () => {\n  try {\n    const response = await api.post('/refresh', {}, {\n      withCredentials: true\n    });\n    const {\n      accessToken\n    } = response.data;\n    localStorage.setItem('accessToken', accessToken);\n    return accessToken;\n  } catch (error) {\n    console.error('Failed to refresh token:', error);\n    return null;\n  }\n};\nexport const logoutUser = async () => {\n  try {\n    await api.post('/logout', {}, {\n      withCredentials: true\n    });\n  } catch (error) {\n    console.error('Failed to logout', error);\n  }\n};","map":{"version":3,"names":["useNavigate","api","API_URL","process","env","REACT_APP_API_URL","loginUser","data","res","fetch","method","headers","credentials","body","JSON","stringify","ok","Error","result","json","localStorage","setItem","accessToken","message","status","userRole","error","console","log","fetchWithAuth","url","options","_s","navigate","getItem","refreshToken","errorMessage","text","response","post","withCredentials","logoutUser"],"sources":["C:/Users/Jan Kenneth/Desktop/projects/templates/MERN/student_frontend/src/assets/services/authServices.jsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport api from \"../helpers/axios\";\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport const loginUser = async (data) => {\r\n  try {\r\n    const res = await fetch(`${API_URL}/api/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data)    \r\n    })\r\n    \r\n    if (!res.ok) {\r\n        throw new Error('Failed to fetch user profile');\r\n    }\r\n\r\n    const result = await res.json()\r\n    localStorage.setItem('accessToken', result.accessToken); \r\n\r\n    return { \r\n        message: result.message,\r\n        status: result.status,\r\n        accessToken: result.accessToken,\r\n        userRole: result.userRole\r\n    }\r\n} catch (error) {\r\n    console.log('Error signing in: ', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport const fetchWithAuth = async (url, options = {}) => {\r\n  const navigate = useNavigate();\r\n\r\n  try {\r\n    let accessToken = localStorage.getItem('accessToken');\r\n\r\n    if (!accessToken) throw new Error('No access token found');\r\n\r\n    options.headers = {\r\n      ...options.headers,\r\n      'Authorization': `Bearer ${accessToken}`,\r\n    };\r\n\r\n    let res = await fetch(url, options);\r\n\r\n    if (res.status === 403) {\r\n      console.log('Access token expired, attempting to refresh...');\r\n\r\n      accessToken = await refreshToken();\r\n\r\n      if (accessToken) {\r\n        options.headers['Authorization'] = `Bearer ${accessToken}`;\r\n        res = await fetch(url, options);\r\n      } else {\r\n        throw new Error('Failed to refresh token');\r\n      }\r\n    }\r\n\r\n    if (!res.ok) {\r\n      const errorMessage = await res.text();\r\n      throw new Error(`Request failed with status ${res.status}: ${errorMessage}`);\r\n    }\r\n\r\n    return await res.json();\r\n  } catch (error) {\r\n    navigate('/');\r\n    console.error('Error fetching with auth:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst refreshToken = async () => {\r\n  try {\r\n    const response = await api.post('/refresh', {}, { withCredentials: true });\r\n    const { accessToken } = response.data;\r\n\r\n    localStorage.setItem('accessToken', accessToken);\r\n\r\n    return accessToken;\r\n  } catch (error) {\r\n    console.error('Failed to refresh token:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const logoutUser = async () => {\r\n  try {\r\n    await api.post('/logout', {}, { withCredentials: true });\r\n  } catch (error) {\r\n    console.error('Failed to logout', error);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}