{"ast":null,"code":"const API_URL = process.env.REACT_APP_API_URL;\nconst token = localStorage.getItem('accessToken');\nconsole.log('token: ', token);\nexport const loginUser = async data => {\n  try {\n    const res = await fetch(`${API_URL}/api/auth/login`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include',\n      body: JSON.stringify(data)\n    });\n    if (!res.ok) {\n      throw new Error('Failed to fetch user profile');\n    }\n    const result = await res.json();\n    return {\n      message: result.message,\n      status: result.status,\n      accesToken: result.accessToken,\n      userRole: result.userRole\n    };\n  } catch (error) {\n    console.log('Error signing in: ', error);\n    throw error;\n  }\n};\nexport const refreshAccessToken = async () => {\n  try {\n    const res = await fetch(`${API_URL}/api/refresh`, {\n      method: 'GET',\n      credentials: 'include' // Important to include cookies\n    });\n    if (!res.ok) throw new Error('Failed to refresh token');\n    const {\n      accessToken\n    } = await res.json();\n    localStorage.setItem('accessToken', accessToken);\n    return accessToken;\n  } catch (error) {\n    console.error('Error refreshing token: ', error);\n    throw error;\n  }\n};\nexport const logoutUser = async () => {\n  try {\n    if (!token) throw new Error('Logout failed');\n    const res = await fetch(`${API_URL}/api/logout`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n    if (!res.ok) throw new Error('Logout failed');\n    await res.json();\n    return {\n      status: 'success',\n      message: 'Logout successfully'\n    };\n  } catch (error) {\n    console.log('Error signing out: ', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","token","localStorage","getItem","console","log","loginUser","data","res","fetch","method","headers","credentials","body","JSON","stringify","ok","Error","result","json","message","status","accesToken","accessToken","userRole","error","refreshAccessToken","setItem","logoutUser"],"sources":["C:/Users/Jan Kenneth/Desktop/projects/templates/MERN/student_frontend/src/assets/services/authServices.jsx"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL;\r\nconst token = localStorage.getItem('accessToken');\r\n\r\nconsole.log('token: ',token)\r\n\r\nexport const loginUser = async (data) => {\r\n  try {\r\n    const res = await fetch(`${API_URL}/api/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data)    \r\n    })\r\n    \r\n    if (!res.ok) {\r\n        throw new Error('Failed to fetch user profile');\r\n    }\r\n\r\n    const result = await res.json()\r\n    return { \r\n        message: result.message,\r\n        status: result.status,\r\n        accesToken: result.accessToken,\r\n        userRole: result.userRole\r\n    }\r\n} catch (error) {\r\n    console.log('Error signing in: ', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport const refreshAccessToken = async () => {\r\n  try {\r\n    const res = await fetch(`${API_URL}/api/refresh`, {\r\n      method: 'GET',\r\n      credentials: 'include' // Important to include cookies\r\n    });\r\n\r\n    if (!res.ok) throw new Error('Failed to refresh token');\r\n\r\n    const { accessToken } = await res.json();\r\n    localStorage.setItem('accessToken', accessToken);\r\n    return accessToken;\r\n  } catch (error) {\r\n    console.error('Error refreshing token: ', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const logoutUser = async () => {\r\n  try {\r\n    if (!token) throw new Error('Logout failed')\r\n\r\n    const res = await fetch(`${API_URL}/api/logout`, {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    });\r\n    if (!res.ok) throw new Error('Logout failed');\r\n\r\n    await res.json()\r\n    return {\r\n        status: 'success',\r\n        message: 'Logout successfully'\r\n    }\r\n  } catch (error) {\r\n    console.log('Error signing out: ', error)\r\n    throw error;\r\n  }\r\n}\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAC7C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;AAEjDC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACJ,KAAK,CAAC;AAE5B,OAAO,MAAMK,SAAS,GAAG,MAAOC,IAAI,IAAK;EACvC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGZ,OAAO,iBAAiB,EAAE;MACjDa,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,WAAW,EAAE,SAAS;MACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;IAC7B,CAAC,CAAC;IAEF,IAAI,CAACC,GAAG,CAACQ,EAAE,EAAE;MACT,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IACnD;IAEA,MAAMC,MAAM,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,CAAC;IAC/B,OAAO;MACHC,OAAO,EAAEF,MAAM,CAACE,OAAO;MACvBC,MAAM,EAAEH,MAAM,CAACG,MAAM;MACrBC,UAAU,EAAEJ,MAAM,CAACK,WAAW;MAC9BC,QAAQ,EAAEN,MAAM,CAACM;IACrB,CAAC;EACL,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZrB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEoB,KAAK,CAAC;IACxC,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,IAAI;IACF,MAAMlB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGZ,OAAO,cAAc,EAAE;MAChDa,MAAM,EAAE,KAAK;MACbE,WAAW,EAAE,SAAS,CAAC;IACzB,CAAC,CAAC;IAEF,IAAI,CAACJ,GAAG,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAEvD,MAAM;MAAEM;IAAY,CAAC,GAAG,MAAMf,GAAG,CAACW,IAAI,CAAC,CAAC;IACxCjB,YAAY,CAACyB,OAAO,CAAC,aAAa,EAAEJ,WAAW,CAAC;IAChD,OAAOA,WAAW;EACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdrB,OAAO,CAACqB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,IAAI,CAAC3B,KAAK,EAAE,MAAM,IAAIgB,KAAK,CAAC,eAAe,CAAC;IAE5C,MAAMT,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGZ,OAAO,aAAa,EAAE;MAC7Ca,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUV,KAAK;MACpC;IACJ,CAAC,CAAC;IACF,IAAI,CAACO,GAAG,CAACQ,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IAE7C,MAAMT,GAAG,CAACW,IAAI,CAAC,CAAC;IAChB,OAAO;MACHE,MAAM,EAAE,SAAS;MACjBD,OAAO,EAAE;IACb,CAAC;EACH,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdrB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEoB,KAAK,CAAC;IACzC,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}