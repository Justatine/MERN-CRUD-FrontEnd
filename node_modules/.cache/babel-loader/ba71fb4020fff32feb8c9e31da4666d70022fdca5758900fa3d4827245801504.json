{"ast":null,"code":"import { fetchWithAuth } from \"./authServices\";\nconst API_URL = process.env.REACT_APP_API_URL;\nexport const getUsers = async () => {\n  try {\n    const result = await customFetch(`${API_URL}/api/users/`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return result.data;\n  } catch (error) {\n    console.error('Error fetching users:', error.message);\n    throw new Error('Failed to fetch user profile');\n  }\n};\nexport const getUser = async id => {\n  try {\n    const result = await fetchWithAuth(`${API_URL}/api/users/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!result || !result.data) {\n      throw new Error('User data is not available');\n    }\n    return result.data;\n  } catch (error) {\n    console.error('Error fetching users:', error);\n    throw new Error('Failed to fetch user profile');\n  }\n};\nexport const createUser = async data => {\n  try {\n    const result = await fetchWithAuth(`${API_URL}/api/users/create`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (!result || !result.message || !result.status) {\n      throw new Error('Invalid response from server');\n    }\n    return {\n      message: result.message,\n      status: result.status\n    };\n  } catch (error) {\n    console.error('Error creating user:', error);\n    throw new Error('Failed to create new user');\n  }\n};\nexport const editUser = async (id, data) => {\n  try {\n    const result = await fetchWithAuth(`${API_URL}/api/users/update/${id}`, {\n      method: 'PUT',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    if (!result || !result.message || !result.status) {\n      throw new Error('Invalid response from server');\n    }\n    return {\n      status: result.status,\n      message: result.message\n    };\n  } catch (error) {\n    console.error('Error updating user: ', error);\n    throw new Error('Failed to update user');\n  }\n};\nexport const deleteUser = async id => {\n  try {\n    const result = await fetchWithAuth(`${API_URL}/api/users/archive`, {\n      method: 'DELETE',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id\n      })\n    });\n    if (!result || !result.message || !result.status) {\n      throw new Error('Invalid response from server');\n    }\n    return {\n      status: result.status,\n      message: result.message\n    };\n  } catch (error) {\n    console.error('Error deleting user: ', error);\n    throw new Error('Failed to delete user');\n  }\n};","map":{"version":3,"names":["fetchWithAuth","API_URL","process","env","REACT_APP_API_URL","getUsers","result","customFetch","method","headers","data","error","console","message","Error","getUser","id","createUser","body","JSON","stringify","status","editUser","deleteUser"],"sources":["C:/Users/Jan Kenneth/Desktop/projects/templates/MERN/student_frontend/src/assets/services/adminService.jsx"],"sourcesContent":["import { fetchWithAuth } from \"./authServices\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nexport const getUsers = async () => {\r\n  try {\r\n    const result = await customFetch(`${API_URL}/api/users/`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    return result.data;\r\n  } catch (error) {\r\n    console.error('Error fetching users:', error.message);\r\n    throw new Error('Failed to fetch user profile');\r\n  }\r\n};\r\n\r\nexport const getUser = async (id) => {\r\n    try {\r\n      const result = await fetchWithAuth(`${API_URL}/api/users/${id}`, {\r\n          method: 'GET',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n      });\r\n\r\n      if (!result || !result.data) {\r\n        throw new Error('User data is not available');\r\n      }\r\n\r\n      return result.data;\r\n    } catch (error) {\r\n        console.error('Error fetching users:', error);\r\n        throw new Error('Failed to fetch user profile');    \r\n    }\r\n}\r\n\r\nexport const createUser = async (data) => {\r\n    try {\r\n      const result = await fetchWithAuth(`${API_URL}/api/users/create`, {\r\n        method: 'POST',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data)\r\n      });\r\n  \r\n      if (!result || !result.message || !result.status) {\r\n        throw new Error('Invalid response from server');\r\n      }\r\n\r\n      return {\r\n        message: result.message,\r\n        status: result.status\r\n      };\r\n      \r\n    } catch (error) {\r\n      console.error('Error creating user:', error);\r\n      throw new Error ('Failed to create new user');\r\n    }\r\n}  \r\n\r\nexport const editUser = async (id, data) => {\r\n  try {\r\n    const result = await fetchWithAuth(`${API_URL}/api/users/update/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n\r\n    if (!result || !result.message || !result.status) {\r\n      throw new Error('Invalid response from server');\r\n    }\r\n\r\n    return {\r\n      status: result.status,\r\n      message: result.message\r\n    }\r\n  } catch (error) {\r\n    console.error('Error updating user: ', error)\r\n    throw new Error('Failed to update user');\r\n  }\r\n}\r\n\r\nexport const deleteUser = async (id) => {\r\n  try {\r\n    const result = await fetchWithAuth(`${API_URL}/api/users/archive`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ id })\r\n    })\r\n\r\n    if (!result || !result.message || !result.status) {\r\n      throw new Error('Invalid response from server');\r\n    }\r\n\r\n    return{ \r\n      status: result.status,\r\n      message: result.message\r\n    }\r\n  } catch (error) {\r\n    console.error('Error deleting user: ',error)\r\n    throw new Error('Failed to delete user');\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}